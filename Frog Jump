#include <bits/stdc++.h>
using namespace std;

int minEnergy(vector<int> arr, int idx){
    if(idx==0){
        return 0;
    }
    int left = minEnergy(arr, idx-1) + abs(arr[idx] - arr[idx-1]);
    int right = INT_MAX;
    
    if(idx>1)
        right = minEnergy(arr, idx-2) + abs(arr[idx] - arr[idx-2]);
        
    return min(left ,right);
}

int minEnergy2(vector<int> arr, int idx, vector<int> &dp){
    if(idx==0){
        return 0;
    }
    if(dp[idx] != -1)
        return dp[idx];
    
    int left = minEnergy2(arr, idx-1, dp) + abs(arr[idx] - arr[idx-1]);
    int right = INT_MAX;
    
    if(idx>1)
        right = minEnergy2(arr, idx-2, dp) + abs(arr[idx] - arr[idx-2]);
        
    return dp[idx] = min(left ,right);
}

int minEnergy3(vector<int> arr){
    int prev=0;
    int prev2=0;
    
    for(int i=1; i<arr.size(); i++){
        int fs=prev + abs(arr[i] - arr[i-1]);
        int ss=INT_MAX;
        
        if(i>1)
           ss=prev2+abs(arr[i] - arr[i-2]);
        
        int curr=min(fs,ss);
        prev2=prev;
        prev=curr;
    }
    
    return prev;
}

int main()
{
    vector<int> arr = {30,10,60,10,60,50};
    vector<int> dp(arr.size(), -1);
    
    vector<int> dp2(arr.size(), 0);
    
    //cout << minEnergy2(arr,arr.size()-1, dp);
    
    
    //3rd way
    dp[0]=0;
    
    for(int i=1; i<dp2.size(); i++){
        int fs=dp[i-1]+abs(arr[i] - arr[i-1]);
        int ss=INT_MAX;
        
        if(i>1)
            ss=dp[i-2]+abs(arr[i] - arr[i-2]);
        
        dp[i]=min(fs,ss);
    }
    
    cout<<dp[dp2.size()-1]<<endl;
    
    cout<<minEnergy3(arr);

    return 0;
}
