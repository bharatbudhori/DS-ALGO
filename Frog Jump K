#include <bits/stdc++.h>
using namespace std;

int minEnergy(vector<int> arr, int idx, int k){
    if(idx==0){
        return 0;
    }
    
    int minn=INT_MAX;
    
    for(int i=1; i<=k; i++){
        if(idx-i >= 0)
            minn = min(minn, minEnergy(arr, idx-i, k) + abs(arr[idx] - arr[idx-i]));
    }
    return minn;
}

int minEnergy2(vector<int> arr, int idx, vector<int> &dp, int k){
    if(idx==0){
        return 0;
    }
    if(dp[idx] != -1)
        return dp[idx];
    
    int minn=INT_MAX;
    
    for(int i=1; i<=k; i++){
        if(idx-i >= 0)
            minn = min(minn, minEnergy(arr, idx-i, k) + abs(arr[idx] - arr[idx-i]));
    }
    return dp[idx]=minn;
}

int main()
{
    vector<int> arr = {30,10,60,10,60,50};
    vector<int> dp(arr.size(), -1);
    int k=2;
    
    vector<int> dp2(arr.size(), 0);
    
    //cout << minEnergy2(arr,arr.size()-1, dp);
    
    
    //3rd way
    dp2[0]=0;
    
    for(int i=1; i<dp2.size(); i++){
        int minn=INT_MAX;
    
        for(int j=1; j<=k; j++){
            if(i-j >= 0)
                minn = min(minn, dp2[i-j] + abs(arr[i] - arr[i-j]));
        }
        
        dp2[i]=minn;
        
    }
    
    cout<<dp2[dp2.size()-1]<<endl;
    
    cout<<minEnergy2(arr, arr.size()-1,dp, k);

    return 0;
}

