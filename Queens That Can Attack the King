class Solution {
public:

    vector<vector<int>> queensAttacktheKing(vector<vector<int>>& queens, vector<int>& king) {
        
        vector<vector<int>> ans;
        vector<vector<int>> arr {
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0}
                                    };
        int n=queens.size();
        
        
        for(int i=0; i<n; i++){
            arr[queens[i][0]][queens[i][1]] = 1;
        }
        
        
        
        int i=king[0];
        int j=king[1];
        
        arr[i][j]=2;
        
        while(i>=0 && j>=0){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            i--;
            j--;
        }
        
        i=king[0];
        j=king[1];
        
        while(i>=0){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            i--;
        }
        
        i=king[0];
        j=king[1];
        
        while(i>=0 && j<8){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            i--;
            j++;
        }
        
        i=king[0];
        j=king[1];
        
        while(j<8){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            j++;
        }
        
        i=king[0];
        j=king[1];
        
        while(i<8 && j<8){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            i++;
            j++;
        }
        
        i=king[0];
        j=king[1];
        
        while(i<8){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            i++;
        }
        
        i=king[0];
        j=king[1];
        
        while(i<8 && j>=0){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            i++;
            j--;
        }
        
        i=king[0];
        j=king[1];
        
        while(j>=0){
            if(arr[i][j]==1){
                vector<int> v = {i,j};
                ans.push_back(v);
                break;
            }
            j--;
        }
        
        return ans;
        
    }
};
