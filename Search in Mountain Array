#include <iostream>
using namespace std;


int peak(vector<int> &arr){
        int s=0;
        int e=arr.size()-1;
        
        while(s < e){
            int mid = s+(e-s)/2;
            
            if(arr[mid] > arr[mid+1]){
                e=mid;
            }
            else{
                s=mid+1;
            }
        }
        return s;
    }
    
    
    
int orderAgnosticBS(int key, vector<int> &arr, int s, int e){
        
        bool isAsc = arr[s] < arr[e];
        
        while(s<=e){
            int mid = s+(e-s)/2;
            
            if(arr[mid] == key){
                return mid;
            }
            if (isAsc){
                if(key<arr[mid]){
                    e=mid-1;
                }
                else{
                    s=mid+1;
                }
            }
            else{
                if(key>arr[mid]){
                    e=mid-1;
                }
                else{
                    s=mid+1;
                }
            }
        }
        return -1;
    }
    
int search(vector<int> &arr, int target) {
       
        int m_peak = peak(arr);
        int try1 = orderAgnosticBS(target, arr, 0, m_peak);
        if(try1 != -1){
            return try1;
        }
        int try2 = orderAgnosticBS(target, arr, m_peak+1, arr.size()-1);
        if(try2 != -1){
            return try2;
        }
        
        return -1;
    }


int main()
{
    vector<int> arr{1,3,5,8,12,23,45,54,57,54,34,32,28,10,9};
    //int arr[] = {1,3,5,8,12,23,45,54,57,54,34,32,28,10,9};
    
    
    
    
    cout<<search(arr,54);

    return 0;
}





