#include <iostream>
#include <bits/stdc++.h>
using namespace std;

double squareRoot(int n, int p){
    int s=0;
    int e=n;
    
    double root=0.0;
    while(s<=e){
        int m=s+(e-s)/2;
        
        if(m*m==n){
            return m;
        }
        if(m*m > n){
            e=m-1;
        }else{
            s=m+1;
        }
    }
    root=s-1;
    double incr=0.1;
    for(int i=0; i<p; i++){
        while(root*root<=n){
            root+=incr;
        }
        
        root-=incr;
        incr/=10;
    }
    return root;
}

double newtonRoot(double n){
    double x=n;
    double root;
    while(true){
        root=0.5*(x+(n/x));
        if(abs(root-x) < 0.5){
            break;
        }
        x=root;
    }
    return root;
}

int main()
{
    cout<<squareRoot(40, 3)<<endl;
    cout<<newtonRoot(40);
    
    return 0;
}




