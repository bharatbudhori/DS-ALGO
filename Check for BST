#include <bits/stdc++.h>
using namespace std;

struct Node{
  int data;
  struct Node* left;
  struct Node* right;
  
  Node(int val){
      data=val;
      left=NULL;
      right=NULL;
  }
};


void inorder(struct Node* root){
    if(root==NULL){
        return;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
   
}

Node* insertBST(Node* root, int val){
    if(root==NULL){
        return new Node(val);
    }
    if(val<root->data){
        root->left=insertBST(root->left,val);
    }
    else{
        root->right=insertBST(root->right,val);
    }
    return root;
}

bool isBST(Node* root, Node* min=NULL, Node* max=NULL){
    
    if(root==NULL){
        return true;
    }
    if(min != NULL && root->data <=min->data){
        return false;
    }
    if(max != NULL && root->data >=max->data){
        return false;
    }
    
    bool leftValid=isBST(root->left, min, root);
    bool rightValid=isBST(root->right, root,max);
    
    return leftValid & rightValid;
}

int main(){
    Node* root=NULL;
    root=insertBST(root,5);
    insertBST(root,1);
    insertBST(root,9);
    insertBST(root,4);
    insertBST(root,8);
    insertBST(root,7);
    
    inorder(root);
    cout<<endl;
    
    if (isBST(root,NULL,NULL)){
        cout<<"Valid BST";
    }
    else{
        cout<<"Invalid BST";
    }
    
    return 0;
    
}
