#include <iostream>
#include <bits/stdc++.h>
using namespace std;


vector<int> searchMatrix(vector<vector<int>>& matrix, int target) {
        int rows = matrix.size();
        int cols = matrix[0].size();
        
        if(rows == 1){
            return search(matrix, 0, 0, cols-1, target);
        }
        
        int rStart = 0;
        int rEnd = rows-1;
        int cMid = cols/2;
        //run till two rowsa are remaining
        while(rStart < rEnd-1){
            int mid=rStart+(rEnd-rStart)/2;
            
            if(matrix[mid][cMid] == target){
                return vector<int> ans{mid, cMid};
            }
            else if(matrix[mid][cMid] < target){
                rStart=mid;
            }
            else{
                rEnd=mid;
            }
        }
        //now we have 2 rows
        //check weather target is in the column of 2 rows
        if(matrix[rStart][cMid] == target){
            return vector<int> ans{rStart, cMid};
        }
        if(matrix[rStart+1][cMid] == target){
            return vector<int> ans{rStart+1, cMid};
        }
        
        //search in 1st part
        if(target <= matrix[rStart][cMid-1]){
            search(matrix, rStart, 0, cMid-1, target);
        }
        
        
        if(target >= matrix[rStart][cMid+1] && target <= matrix[rStart][cols-1]){
            search(matrix, rStart, cMid+1, cols-1, target);
        }
        
        if(target <= matrix[rStart+1][cMid-1]){
            search(matrix, rStart+1, 0, cMid-1, target);
        }
        
        if(target >= matrix[rStart+1][cMid+1]){
            search(matrix, rStart+1, 0, cols-1, target);
        }
        
    }
    
    
vector<int> search(vector<vector<int>>& matrix, int row, int cStart, int cEnd, int target) {
        
    
        while(cStart<=cEnd){
            int mid=cStart+(cEnd-cStart)/2;
            
            if(matrix[row][mid]==target){
                return vector<int> ans{rows, mid};
            }
            else if(matrix[row][mid] > target){
                cEnd=mid-1;
            }
            else{
                cStart=mid+1;
            }
        }
        return vector<int> ans{-1, -1};
    }
    
int main()
{
    vector<vector<int>> vect
    {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };
    
    
    
    
    cout<<searchMatrix(vect, 8);

    return 0;
}











