#include <bits/stdc++.h>
using namespace std;

int f(int i, int j, vector<int> arr, vector<vector<int>> &dp){
    if(i==j) return 0;
    
    if(dp[i][j] != -1) return dp[i][j];
    
    int mini = INT_MAX;
    
    for(int k=i; k<j; k++){
        int steps = arr[i-1]*arr[k]*arr[j] + f(i, k, arr, dp) + f(k+1, j, arr, dp);
        
        mini = min(mini, steps);
        
    }
    return dp[i][j] = mini;
}

int main()
{
    vector<int> arr = {10, 20, 30, 40, 50};
    int n=arr.size();
    
    vector<vector<int>> dp(n, vector<int>(n,-1));
    cout<< f(1, n-1, arr, dp)<<endl;
    
    vector<vector<int>> dp1(n, vector<int>(n,0));
    
    for(int i=0; i<n; i++){
        dp1[i][i]=0;
    }
    
    for(int i=n-1; i>=1; i--){
        for(int j=i+1; j<n; j++){
            int mini = INT_MAX;
    
            for(int k=i; k<j; k++){
                int steps = arr[i-1]*arr[k]*arr[j] + dp1[i][k] + dp1[k+1][j];
                
                mini = min(mini, steps);
                
            }
            dp1[i][j] = mini;
        }
    }
    
    cout<<dp1[1][n-1];
    
    return 0;
}




